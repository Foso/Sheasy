buildscript {
    apply from: './webConstants.gradle'
}

plugins {

    id 'org.jetbrains.kotlin.multiplatform'
    id 'org.jetbrains.kotlin.frontend'
}


repositories {
    ext.buildMaven = { p -> repositories { maven { url p } } }
    jcenter()
    mavenCentral()
    mavenRepos.each { buildMaven(it) }

}

detekt {
    toolVersion = "1.0.0.RC9.2"
    input = files("src/jsMain/kotlin")
    filters = ".*/resources/.*,.*/build/.*"
    config = files("./default-detekt-config.yml")
}


kotlin {


    targets {
        fromPreset(presets.jvm, 'android')

        fromPreset(presets.jvm, 'jvm'){
            configure([compilations.main]) {
                tasks.getByName(compileKotlinTaskName).kotlinOptions {
                    jvmTarget = "1.8"

                }


            }
        }
        fromPreset(presets.js, 'js') {
            configure([compilations.main]) {
                tasks.getByName(compileKotlinTaskName).kotlinOptions {
                    languageVersion = "1.3"
                    sourceMap = true
                    moduleKind = "commonjs"
                    metaInfo = true
                    outputFile = "${project.buildDir.path}/js/${project.name}.js"

                }


            }

            configure(compilations.main) {
                tasks.getByName(compileKotlinTaskName).kotlinOptions {
                    main = "call"
                }
            }
        }
    }

    sourceSets {

        jsMain {
            kotlin.srcDirs += "kotlin"
            resources.srcDirs += "web"

            dependencies {
                implementation project(":libshared")

                implementation "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
                implementation "org.jetbrains.kotlinx:kotlinx-html-js:$kotlinx_html_version"
                implementation "org.jetbrains:kotlin-react:$kotlin_react_version"
                implementation "org.jetbrains:kotlin-react-dom:$kotlin_react_dom_version"
                implementation 'org.kodein.di:kodein-di-erased-js:6.0.1'
            }
        }

    }
}

kotlinFrontend {
    downloadNodeJsVersion = 'latest'

    npm {
        dependency("bootstrap", "${libs.bootstrap}")
        dependency("style-loader")
        dependency("@material-ui/core","v3.7.0")
        dependency("@material-ui/icons")
        dependency("axios", "${libs.axios}")
        dependency("core-js", "${libs.core_js}")
     //   dependency("rxjs", "${libs.rxjs}")
        //  dependency("qrcode.react")
        dependency("react-autosuggest")
        dependency("history", "${libs.history}")
        dependency("react-router-dom", "${libs.react_router_dom}")
        dependency("react-dev-utils", "^5.0.2")
        dependency("react-draggable")
        dependency("react-dropzone", "${libs.react_dropzone}")
      //  dependency("react-lottie")
        dependency("react-web-notification", "${libs.react_web_notification}")
        dependency("reactstrap", "${libs.reactstrap}")
        dependency("simple-websocket", "${libs.simple_websocket}")
        dependency('react', react_version)
        dependency('react-dom', react_version)
        dependency("css-loader")
        dependency("style-loader")

    }


    webpackBundle {
        port = 8080
        mode= "production"
        bundleName = "jsMain"
       // sourceMapEnabled = true
        contentPath = file('src/jsMain/web')
        publicPath = "/web"
        //  proxyUrl = 'http://localhost:8080'
    }
}

task serverPrepare(type: Copy, dependsOn: ["build"]) {
    from "./build/bundle", "./src/jsMain/web"
    into "./deploy"
}
