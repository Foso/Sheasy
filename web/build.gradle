buildscript {
    apply from: './constants.gradle'
}

plugins {
    id 'kotlin-multiplatform' version '1.3.11'
    id 'org.jetbrains.kotlin.frontend' version '0.0.44'
}

repositories {
    ext.buildMaven = { p -> repositories { maven { url p } } }

    mavenCentral()
    mavenRepos.each { buildMaven(it) }

}

dependencies {

    testCompile "org.jetbrains.kotlin:kotlin-test-js:$kotlin_version"
}

kotlin {
    targets {
        fromPreset(presets.jvm, 'android')

        fromPreset(presets.jvm, 'jvm')
        fromPreset(presets.js, 'js') {
            configure([compilations.main, compilations.test]) {
                tasks.getByName(compileKotlinTaskName).kotlinOptions {
                    sourceMap = true
                    moduleKind = "commonjs"
                    metaInfo = true
                    outputFile = "${project.buildDir.path}/js/${project.name}.js"

                }


            }

            configure(compilations.main) {
                tasks.getByName(compileKotlinTaskName).kotlinOptions {
                    main = "call"
                }
            }
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
            }
        }
        commonTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-common'
                implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
            }
        }

        jsMain {
            kotlin.srcDirs += "src"
            resources.srcDirs += "web"

            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-js'
                implementation "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
                implementation "org.jetbrains.kotlinx:kotlinx-html-js:$kotlinx_html_version"
                implementation "org.jetbrains:kotlin-react:$kotlin_react_version"
                implementation "org.jetbrains:kotlin-react-dom:$kotlin_react_dom_version"
            }
        }

        jsTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-js'
            }
        }
    }
}

kotlinFrontend {
     downloadNodeJsVersion = 'latest'

    npm {
        dependency("bootstrap", "${libs.bootstrap}")
        dependency("style-loader")
        dependency("@material-ui/core")
        dependency("@material-ui/icons")
        dependency("axios", "${libs.axios}")
        dependency("core-js", "${libs.core_js}")
        dependency("rxjs", "${libs.rxjs}")
      //  dependency("qrcode.react")
        dependency("react-autosuggest")
        dependency("history", "${libs.history}")
        dependency("react-router-dom", "${libs.react_router_dom}")
        dependency("react-dev-utils", "^5.0.2")
        dependency("react-draggable")
        dependency("react-dropzone", "${libs.react_dropzone}")
        dependency("react-lottie")
        dependency("react-web-notification", "${libs.react_web_notification}")
        dependency("reactstrap", "${libs.reactstrap}")
        dependency("simple-websocket", "${libs.simple_websocket}")
        dependency('react', react_version)
        dependency('react-dom', react_version)
        dependency("css-loader")
        dependency("style-loader")

    }


    webpackBundle {
        port=8080
        bundleName = "jsMain"
        sourceMapEnabled = true
        contentPath = file('src/jsMain/resources')
        publicPath = "/web"
      //  proxyUrl = 'http://localhost:8080'
    }
}







task serverPrepare(type: Copy, dependsOn: ["build"]) {
    from "${project.buildDir.path}/build/bundle", "$rootDir/src/jsMain/web"
    into "${project.buildDir.path}/deploy"
}
